apiVersion: v1
data:
  turnserver.conf: "# Coturn TURN SERVER configuration file\r\n#\r\n# Boolean values
    note: where a boolean value is supposed to be used,\r\n# you can use '0', 'off',
    'no', 'false', or 'f' as 'false',\r\n# and you can use '1', 'on', 'yes', 'true',
    or 't' as 'true'\r\n# If the value is missing, then it means 'true' by default.\r\n#\r\n\r\n#
    Listener interface device (optional, Linux only).\r\n# NOT RECOMMENDED.\r\n#\r\n#listening-device=eth0\r\n\r\n#
    TURN listener port for UDP and TCP (Default: 3478).\r\n# Note: actually, TLS &
    DTLS sessions can connect to the\r\n# \"plain\" TCP & UDP port(s), too - if allowed
    by configuration.\r\n#\r\nlistening-port=3478\r\n\r\n# TURN listener port for
    TLS (Default: 5349).\r\n# Note: actually, \"plain\" TCP & UDP sessions can connect
    to the TLS & DTLS\r\n# port(s), too - if allowed by configuration. The TURN server\r\n#
    \"automatically\" recognizes the type of traffic. Actually, two listening\r\n#
    endpoints (the \"plain\" one and the \"tls\" one) are equivalent in terms of\r\n#
    functionality; but Coturn keeps both endpoints to satisfy the RFC 5766 specs.\r\n#
    For secure TCP connections, Coturn currently supports SSL version 3 and\r\n# TLS
    version 1.0, 1.1 and 1.2.\r\n# For secure UDP connections, Coturn supports DTLS
    version 1.\r\n#\r\ntls-listening-port=5349\r\n\r\n# Alternative listening port
    for UDP and TCP listeners;\r\n# default (or zero) value means \"listening port
    plus one\".\r\n# This is needed for RFC 5780 support\r\n# (STUN extension specs,
    NAT behavior discovery). The TURN Server\r\n# supports RFC 5780 only if it is
    started with more than one\r\n# listening IP address of the same family (IPv4
    or IPv6).\r\n# RFC 5780 is supported only by UDP protocol, other protocols\r\n#
    are listening to that endpoint only for \"symmetry\".\r\n#\r\n#alt-listening-port=0\r\n\r\n#
    Alternative listening port for TLS and DTLS protocols.\r\n# Default (or zero)
    value means \"TLS listening port plus one\".\r\n#\r\n#alt-tls-listening-port=0\r\n\r\n#
    Some network setups will require using a TCP reverse proxy in front\r\n# of the
    STUN server. If the proxy port option is set a single listener\r\n# is started
    on the given port that accepts connections using the\r\n# haproxy proxy protocol
    v2.\r\n# (https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt)\r\n#\r\n#tcp-proxy-port=5555\r\n\r\n#
    Listener IP address of relay server. Multiple listeners can be specified.\r\n#
    If no IP(s) specified in the config file or in the command line options,\r\n#
    then all IPv4 and IPv6 system IPs will be used for listening.\r\n#\r\nlistening-ip=0.0.0.0\r\n#listening-ip=10.207.21.238\r\n#listening-ip=2607:f0d0:1002:51::4\r\n\r\n\r\n#
    (recommended for older Linuxes only)\r\n# Automatically balance UDP traffic over
    auxiliary servers (if configured).\r\n# The load balancing is using the ALTERNATE-SERVER
    mechanism.\r\n# The TURN client must support 300 ALTERNATE-SERVER response for
    this\r\n# functionality.\r\n#\r\n#udp-self-balance\r\n\r\n# Relay interface device
    for relay sockets (optional, Linux only).\r\n# NOT RECOMMENDED.\r\n#\r\n#relay-device=eth1\r\n\r\n#   
    Relay address (the local IP address that will be used to relay the\r\n# packets
    to the peer).\r\n# Multiple relay addresses may be used.\r\n# The same IP(s) can
    be used as both listening IP(s) and relay IP(s).\r\n#\r\n# If no relay IP(s) specified,
    then the turnserver will apply the default\r\n# policy: it will decide itself
    which relay addresses to be used, and it\r\n# will always be using the client
    socket IP address as the relay IP address\r\n# of the TURN session (if the requested
    relay address family is the same\r\n# as the family of the client socket).\r\n#\r\n#relay-ip=172.17.19.105\r\n#relay-ip=2607:f0d0:1002:51::5\r\n\r\n#
    For Amazon EC2 users:\r\n#\r\n# TURN Server public/private address mapping, if
    the server is behind NAT.\r\n# In that situation, if a -X is used in form \"-X
    <ip>\" then that ip will be reported\r\n# as relay IP address of all allocations.
    This scenario works only in a simple case\r\n# when one single relay address is
    be used, and no RFC5780 functionality is required.\r\n# That single relay address
    must be mapped by NAT to the 'external' IP.\r\n# The \"external-ip\" value, if
    not empty, is returned in XOR-RELAYED-ADDRESS field.\r\n# For that 'external'
    IP, NAT must forward ports directly (relayed port 12345\r\n# must be always mapped
    to the same 'external' port 12345).\r\n#\r\n# In more complex case when more than
    one IP address is involved,\r\n# that option must be used several times, each
    entry must\r\n# have form \"-X <public-ip/private-ip>\", to map all involved addresses.\r\n#
    RFC5780 NAT discovery STUN functionality will work correctly,\r\n# if the addresses
    are mapped properly, even when the TURN server itself\r\n# is behind A NAT.\r\n#\r\n#
    By default, this value is empty, and no address mapping is used.\r\n#\r\n#external-ip=60.70.80.91\r\n#\r\n#OR:\r\n#\r\n#external-ip=60.70.80.91/172.17.19.101\r\n#external-ip=60.70.80.92/172.17.19.102\r\n\r\n\r\n#
    Number of the relay threads to handle the established connections\r\n# (in addition
    to authentication thread and the listener thread).\r\n# If explicitly set to 0
    then application runs relay process in a\r\n# single thread, in the same thread
    with the listener process\r\n# (the authentication thread will still be a separate
    thread).\r\n#\r\n# If this parameter is not set, then the default OS-dependent\r\n#
    thread pattern algorithm will be employed. Usually the default\r\n# algorithm
    is optimal, so you have to change this option\r\n# if you want to make some fine
    tweaks.\r\n#\r\n# In the older systems (Linux kernel before 3.9),\r\n# the number
    of UDP threads is always one thread per network listening\r\n# endpoint - including
    the auxiliary endpoints - unless 0 (zero) or\r\n# 1 (one) value is set.\r\n#\r\nrelay-threads=3\r\n\r\n#
    Lower and upper bounds of the UDP relay endpoints:\r\n# (default values are 49152
    and 65535)\r\n#\r\nmin-port=32355\r\nmax-port=65535\r\n\r\n# Uncomment to run
    TURN server in 'normal' 'moderate' verbose mode.\r\n# By default the verbose mode
    is off.\r\nverbose\r\n\r\n# Uncomment to run TURN server in 'extra' verbose mode.\r\n#
    This mode is very annoying and produces lots of output.\r\n# Not recommended under
    normal circumstances.\r\n#\r\n#Verbose\r\n\r\n# Uncomment to use fingerprints
    in the TURN messages.\r\n# By default the fingerprints are off.\r\n#\r\nfingerprint\r\n\r\n#
    Uncomment to use long-term credential mechanism.\r\n# By default no credentials
    mechanism is used (any user allowed).\r\n#\r\n#lt-cred-mech\r\n\r\n# This option
    is the opposite of lt-cred-mech.\r\n# (TURN Server with no-auth option allows
    anonymous access).\r\n# If neither option is defined, and no users are defined,\r\n#
    then no-auth is default. If at least one user is defined,\r\n# in this file, in
    command line or in usersdb file, then\r\n# lt-cred-mech is default.\r\n#\r\n#no-auth\r\n\r\n#
    Enable prometheus exporter\r\n# If enabled the turnserver will expose an endpoint
    with stats on a prometheus format\r\n# this endpoint is listening on a different
    port to not conflict with other configurations.\r\n#\r\n# You can simply run the
    turnserver and access the port 9641 and path /metrics\r\n#\r\n# For more info
    on the prometheus exporter and metrics\r\n# https://prometheus.io/docs/introduction/overview/\r\n#    
    https://prometheus.io/docs/concepts/data_model/\r\n#\r\n#prometheus\r\n\r\n# TURN
    REST API flag.\r\n# (Time Limited Long Term Credential)\r\n# Flag that sets a
    special authorization option that is based upon authentication secret.\r\n#\r\n#
    This feature's purpose is to support \"TURN Server REST API\", see\r\n# \"TURN
    REST API\" link in the project's page\r\n# https://github.com/coturn/coturn/\r\n#\r\n#
    This option is used with timestamp:\r\n#\r\n# usercombo -> \"timestamp:userid\"\r\n#
    turn user -> usercombo\r\n# turn password -> base64(hmac(secret key, usercombo))\r\n#\r\n#
    This allows TURN credentials to be accounted for a specific user id.\r\n# If you
    don't have a suitable id, then the timestamp alone can be used.\r\n# This option
    is enabled by turning on secret-based authentication.\r\n# The actual value of
    the secret is defined either by the option static-auth-secret,\r\n# or can be
    found in the turn_secret table in the database (see below).\r\n#\r\n# Read more
    about it:\r\n#  - https://tools.ietf.org/html/draft-uberti-behave-turn-rest-00\r\n#
    \ - https://www.ietf.org/proceedings/87/slides/slides-87-behave-10.pdf\r\n#\r\n#
    Be aware that use-auth-secret overrides some parts of lt-cred-mech.\r\n# The use-auth-secret
    feature depends internally on lt-cred-mech, so if you set\r\n# this option then
    it automatically enables lt-cred-mech internally\r\n# as if you had enabled both.\r\n#\r\n#
    Note that you can use only one auth mechanism at the same time! This is because,\r\n#
    both mechanisms conduct username and password validation in different ways.\r\n#\r\n#
    Use either lt-cred-mech or use-auth-secret in the conf\r\n# to avoid any confusion.\r\n#\r\nuse-auth-secret\r\n\r\n#
    'Static' authentication secret value (a string) for TURN REST API only.\r\n# If
    not set, then the turn server\r\n# will try to use the 'dynamic' value in the
    turn_secret table\r\n# in the user database (if present). The database-stored
    \ value can be changed on-the-fly\r\n# by a separate program, so this is why that
    mode is considered 'dynamic'.\r\n#\r\n#static-auth-secret=north\r\n\r\n# Server
    name used for\r\n# the oAuth authentication purposes.\r\n# The default value is
    the realm name.\r\n#\r\n#server-name=blackdow.carleon.gov\r\n\r\n# Flag that allows
    oAuth authentication.\r\n#\r\n#oauth\r\n\r\n# 'Static' user accounts for the long
    term credentials mechanism, only.\r\n# This option cannot be used with TURN REST
    API.\r\n# 'Static' user accounts are NOT dynamically checked by the turnserver
    process,\r\n# so they can NOT be changed while the turnserver is running.\r\n#\r\n#user=username1:key1\r\n#user=username2:key2\r\n#
    OR:\r\n#user=username1:password1\r\n#user=username2:password2\r\n#\r\n# Keys must
    be generated by turnadmin utility. The key value depends\r\n# on user name, realm,
    and password:\r\n#\r\n# Example:\r\n# $ turnadmin -k -u ninefingers -r north.gov
    -p youhavetoberealistic\r\n# Output: 0xbc807ee29df3c9ffa736523fb2c4e8ee\r\n# ('0x'
    in the beginning of the key is what differentiates the key from\r\n# password.
    If it has 0x then it is a key, otherwise it is a password).\r\n#\r\n# The corresponding
    user account entry in the config file will be:\r\n#\r\n#user=ninefingers:0xbc807ee29df3c9ffa736523fb2c4e8ee\r\n#
    Or, equivalently, with open clear password (less secure):\r\n#user=ninefingers:youhavetoberealistic\r\n#\r\n\r\n#
    SQLite database file name.\r\n#\r\n# The default file name is /var/db/turndb or
    /usr/local/var/db/turndb or\r\n# /var/lib/turn/turndb.\r\n#\r\n#userdb=/var/db/turndb\r\n\r\n#        
    PostgreSQL database connection string in the case that you are using PostgreSQL\r\n#
    as the user database.\r\n# This database can be used for the long-term credential
    mechanism\r\n# and it can store the secret value for secret-based timed authentication
    in TURN REST API.\r\n# See http://www.postgresql.org/docs/8.4/static/libpq-connect.html
    for 8.x PostgreSQL\r\n# versions connection string format, see\r\n# http://www.postgresql.org/docs/9.2/static/libpq-connect.html#LIBPQ-CONNSTRING\r\n#
    for 9.x and newer connection string formats.\r\n#\r\n#psql-userdb=\"host=<host>
    dbname=<database-name> user=<database-user> password=<database-user-password>
    connect_timeout=30\"\r\n\r\n# MySQL database connection string in the case that
    you are using MySQL\r\n# as the user database.\r\n# This database can be used
    for the long-term credential mechanism\r\n# and it can store the secret value
    for secret-based timed authentication in TURN REST API.\r\n#\r\n# Optional connection
    string parameters for the secure communications (SSL):\r\n# ca, capath, cert,
    key, cipher\r\n# (see http://dev.mysql.com/doc/refman/5.1/en/ssl-options.html
    for the\r\n# command options description).\r\n#\r\n# Use the string format below
    (space separated parameters, all optional):\r\n#\r\nmysql-userdb=\"host=127.0.0.1
    dbname=coturn user=coturn password=coturn_password port=3306 connect_timeout=10
    read_timeout=10\"\r\n\r\n# If you want to use an encrypted password in the MySQL
    connection string,\r\n# then set the MySQL password encryption secret key file
    with this option.\r\n#\r\n# Warning: If this option is set, then the mysql password
    must be set in \"mysql-userdb\" in an encrypted format!\r\n# If you want to use
    a cleartext password then do not set this option!\r\n#\r\n# This is the file path
    for the aes encrypted secret key used for password encryption.\r\n#\r\n#secret-key-file=/path/\r\n\r\n#
    MongoDB database connection string in the case that you are using MongoDB\r\n#
    as the user database.\r\n# This database can be used for long-term credential
    mechanism\r\n# and it can store the secret value for secret-based timed authentication
    in TURN REST API.\r\n# Use the string format described at http://hergert.me/docs/mongo-c-driver/mongoc_uri.html\r\n#\r\n#mongo-userdb=\"mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]\"\r\n\r\n#
    Redis database connection string in the case that you are using Redis\r\n# as
    the user database.\r\n# This database can be used for long-term credential mechanism\r\n#
    and it can store the secret value for secret-based timed authentication in TURN
    REST API.\r\n# Use the string format below (space separated parameters, all optional):\r\n#\r\n#redis-userdb=\"ip=<ip-address>
    dbname=<database-number> password=<database-user-password> port=<port> connect_timeout=<seconds>\"\r\n\r\n#
    Redis status and statistics database connection string, if used (default - empty,
    no Redis stats DB used).\r\n# This database keeps allocations status information,
    and it can be also used for publishing\r\n# and delivering traffic and allocation
    event notifications.\r\n# The connection string has the same parameters as redis-userdb
    connection string.\r\n# Use the string format below (space separated parameters,
    all optional):\r\n#\r\n#redis-statsdb=\"ip=<ip-address> dbname=<database-number>
    password=<database-user-password> port=<port> connect_timeout=<seconds>\"\r\n\r\n#
    The default realm to be used for the users when no explicit\r\n# origin/realm
    relationship is found in the database, or if the TURN\r\n# server is not using
    any database (just the commands-line settings\r\n# and the userdb file). Must
    be used with long-term credentials\r\n# mechanism or with TURN REST API.\r\n#\r\n#
    Note: If the default realm is not specified, then realm falls back to the host
    domain name.\r\n#       If the domain name string is empty, or set to '(None)',
    then it is initialized as an empty string.\r\n#\r\nrealm=matchflix.it\r\n\r\n#
    This flag sets the origin consistency\r\n# check. Across the session, all requests
    must have the same\r\n# main ORIGIN attribute value (if the ORIGIN was\r\n# initially
    used by the session).\r\n#\r\n#check-origin-consistency\r\n\r\n# Per-user allocation
    quota.\r\n# default value is 0 (no quota, unlimited number of sessions per user).\r\n#
    This option can also be set through the database, for a particular realm.\r\n#\r\n#user-quota=0\r\n\r\n#
    Total allocation quota.\r\n# default value is 0 (no quota).\r\n# This option can
    also be set through the database, for a particular realm.\r\n#\r\n#total-quota=0\r\n\r\n#
    Max bytes-per-second bandwidth a TURN session is allowed to handle\r\n# (input
    and output network streams are treated separately). Anything above\r\n# that limit
    will be dropped or temporarily suppressed (within\r\n# the available buffer limits).\r\n#
    This option can also be set through the database, for a particular realm.\r\n#\r\nmax-bps=3000000\r\n\r\n#\r\n#
    Maximum server capacity.\r\n# Total bytes-per-second bandwidth the TURN server
    is allowed to allocate\r\n# for the sessions, combined (input and output network
    streams are treated separately).\r\n#\r\n#bps-capacity=0\r\n\r\n# Uncomment if
    no UDP client listener is desired.\r\n# By default UDP client listener is always
    started.\r\n#\r\n#no-udp\r\n\r\n# Uncomment if no TCP client listener is desired.\r\n#
    By default TCP client listener is always started.\r\n#\r\n#no-tcp\r\n\r\n# Uncomment
    if no TLS client listener is desired.\r\n# By default TLS client listener is always
    started.\r\n#\r\n#no-tls\r\n\r\n# Uncomment if no DTLS client listener is desired.\r\n#
    By default DTLS client listener is always started.\r\n#\r\n#no-dtls\r\n\r\n# Uncomment
    if no UDP relay endpoints are allowed.\r\n# By default UDP relay endpoints are
    enabled (like in RFC 5766).\r\n#\r\n#no-udp-relay\r\n\r\n# Uncomment if no TCP
    relay endpoints are allowed.\r\n# By default TCP relay endpoints are enabled (like
    in RFC 6062).\r\n#\r\n#no-tcp-relay\r\n\r\n# Uncomment if extra security is desired,\r\n#
    with nonce value having a limited lifetime.\r\n# The nonce value is unique for
    a session.\r\n# Set this option to limit the nonce lifetime.\r\n# Set it to 0
    for unlimited lifetime.\r\n# It defaults to 600 secs (10 min) if no value is provided.
    After that delay,\r\n# the client will get 438 error and will have to re-authenticate
    itself.\r\n#\r\n#stale-nonce=600\r\n\r\n# Uncomment if you want to set the maximum
    allocation\r\n# time before it has to be refreshed.\r\n# Default is 3600s.\r\n#\r\n#max-allocate-lifetime=3600\r\n\r\n\r\n#
    Uncomment to set the lifetime for the channel.\r\n# Default value is 600 secs
    (10 minutes).\r\n# This value MUST not be changed for production purposes.\r\n#\r\n#channel-lifetime=600\r\n\r\n#
    Uncomment to set the permission lifetime.\r\n# Default to 300 secs (5 minutes).\r\n#
    In production this value MUST not be changed,\r\n# however it can be useful for
    test purposes.\r\n#\r\n#permission-lifetime=300\r\n\r\n# Certificate file.\r\n#
    Use an absolute path or path relative to the\r\n# configuration file.\r\n# Use
    PEM file format.\r\n#\r\n#cert=/etc/ssl/certs/cert.pem\r\n\r\n# Private key file.\r\n#
    Use an absolute path or path relative to the\r\n# configuration file.\r\n# Use
    PEM file format.\r\n#\r\n#pkey=/etc/ssl/private/privkey.pem\r\n\r\n# Private key
    file password, if it is in encoded format.\r\n# This option has no default value.\r\n#\r\n#pkey-pwd=...\r\n\r\n#
    Allowed OpenSSL cipher list for TLS/DTLS connections.\r\n# Default value is \"DEFAULT\".\r\n#\r\n#cipher-list=\"DEFAULT\"\r\n\r\n#
    CA file in OpenSSL format.\r\n# Forces TURN server to verify the client SSL certificates.\r\n#        
    By default this is not set: there is no default value and the client\r\n# certificate
    is not checked.\r\n#\r\n# Example:\r\n#CA-file=/etc/ssh/id_rsa.cert\r\n\r\n# Curve
    name for EC ciphers, if supported by OpenSSL\r\n# library (TLS and DTLS). The
    default value is prime256v1,\r\n# if pre-OpenSSL 1.0.2 is used. With OpenSSL 1.0.2+,\r\n#
    an optimal curve will be automatically calculated, if not defined\r\n# by this
    option.\r\n#\r\n#ec-curve-name=prime256v1\r\n\r\n# Use 566 bits predefined DH
    TLS key. Default size of the key is 2066.\r\n#\r\n#dh566\r\n\r\n# Use 1066 bits
    predefined DH TLS key. Default size of the key is 2066.\r\n#\r\n#dh1066\r\n\r\n#
    Use custom DH TLS key, stored in PEM format in the file.\r\n# Flags --dh566 and
    --dh1066 are ignored when the DH key is taken from a file.\r\n#\r\n#dh-file=<DH-PEM-file-name>\r\n\r\n#
    Flag to prevent stdout log messages.\r\n# By default, all log messages go to both
    stdout and to\r\n# the configured log file. With this option everything will\r\n#
    go to the configured log only (unless the log file itself is stdout).\r\n#\r\n#no-stdout-log\r\n\r\n# 
    Option to set the log file name.\r\n# By default, the turnserver tries to open
    a log file in\r\n# /var/log, /var/tmp, /tmp and the current directory\r\n# (Whichever
    file open operation succeeds first will be used).\r\n# With this option you can
    set the definite log file name.\r\n# The special names are \"stdout\" and \"-\"
    - they will force everything\r\n# to the stdout. Also, the \"syslog\" name will
    force everything to\r\n# the system log (syslog).\r\n# In the runtime, the logfile
    can be reset with the SIGHUP signal\r\n# to the turnserver process.\r\n#\r\nlog-file=/var/tmp/turn.log\r\n\r\n#
    Option to redirect all log output into system log (syslog).\r\n#\r\nsyslog\r\n\r\n#
    Set syslog facility for syslog messages\r\n# Default values is ''.\r\n#\r\n#syslog-facility=\"LOG_LOCAL1\"\r\n\r\n#
    This flag means that no log file rollover will be used, and the log file\r\n#
    name will be constructed as-is, without PID and date appendage.\r\n# This option
    can be used, for example, together with the logrotate tool.\r\n#\r\n#simple-log\r\n\r\n#
    Enable full ISO-8601 timestamp in all logs.\r\n#new-log-timestamp\r\n\r\n# Set
    timestamp format (in strftime(1) format). Depends on new-log-timestamp to be enabled.\r\n#new-log-timestamp-format
    \"%FT%T%z\"\r\n\r\n# Disabled by default binding logging in verbose log mode to
    avoid DoS attacks.\r\n# Enable binding logging and UDP endpoint logs in verbose
    log mode.\r\n#log-binding\r\n\r\n# Option to set the \"redirection\" mode. The
    value of this option\r\n# will be the address of the alternate server for UDP
    & TCP service in the form of\r\n# <ip>[:<port>]. The server will send this value
    in the attribute\r\n# ALTERNATE-SERVER, with error 300, on ALLOCATE request, to
    the client.\r\n# Client will receive only values with the same address family\r\n#
    as the client network endpoint address family.\r\n# See RFC 5389 and RFC 5766
    for the description of ALTERNATE-SERVER functionality.\r\n# The client must use
    the obtained value for subsequent TURN communications.\r\n# If more than one --alternate-server       
    option is provided, then the functionality\r\n# can be more accurately described
    as \"load-balancing\" than a mere \"redirection\".\r\n# If the port number is
    omitted, then the default port\r\n# number 3478 for the UDP/TCP protocols will
    be used.\r\n# Colon (:) characters in IPv6 addresses may conflict with the syntax
    of\r\n# the option. To alleviate this conflict, literal IPv6 addresses are enclosed\r\n#
    in square brackets in such resource identifiers, for example:\r\n# [2001:db8:85a3:8d3:1319:8a2e:370:7348]:3478
    .\r\n# Multiple alternate servers can be set. They will be used in the\r\n# round-robin
    manner. All servers in the pool are considered of equal weight and\r\n# the load
    will be distributed equally. For example, if you have 4 alternate servers,\r\n#
    then each server will receive 25% of ALLOCATE requests. A alternate TURN server\r\n#
    address can be used more than one time with the alternate-server option, so this\r\n#
    can emulate \"weighting\" of the servers.\r\n#\r\n# Examples:\r\n#alternate-server=1.2.3.4:5678\r\n#alternate-server=11.22.33.44:56789\r\n#alternate-server=5.6.7.8\r\n#alternate-server=[2001:db8:85a3:8d3:1319:8a2e:370:7348]:3478\r\n\r\n#
    Option to set alternative server for TLS & DTLS services in form of\r\n# <ip>:<port>.
    If the port number is omitted, then the default port\r\n# number 5349 for the
    TLS/DTLS protocols will be used. See the previous\r\n# option for the functionality
    description.\r\n#\r\n# Examples:\r\n#tls-alternate-server=1.2.3.4:5678\r\n#tls-alternate-server=11.22.33.44:56789\r\n#tls-alternate-server=[2001:db8:85a3:8d3:1319:8a2e:370:7348]:3478\r\n\r\n#
    Option to suppress TURN functionality, only STUN requests will be processed.\r\n#
    Run as STUN server only, all TURN requests will be ignored.\r\n# By default, this
    option is NOT set.\r\n#\r\n#stun-only\r\n\r\n# Option to hide software version.
    Enhance security when used in production.\r\n# Revealing the specific software
    version of the agent through the\r\n# SOFTWARE attribute might allow them to become
    more vulnerable to\r\n# attacks against software that is known to contain security
    holes.\r\n# Implementers SHOULD make usage of the SOFTWARE attribute a\r\n# configurable
    option (https://tools.ietf.org/html/rfc5389#section-16.1.2)\r\n#\r\n#no-software-attribute\r\n\r\n#   
    Option to suppress STUN functionality, only TURN requests will be processed.\r\n#
    Run as TURN server only, all STUN requests will be ignored.\r\n# By default, this
    option is NOT set.\r\n#\r\n#no-stun\r\n\r\n# This is the timestamp/username separator
    symbol (character) in TURN REST API.\r\n# The default value is ':'.\r\n#\r\n#rest-api-separator=:\r\n\r\n#
    Flag that can be used to allow peers on the loopback addresses (127.x.x.x and
    ::1).\r\n# This is an extra security measure.\r\n#\r\n# (To avoid any security
    issue that allowing loopback access may raise,\r\n# the no-loopback-peers option
    is replaced by allow-loopback-peers.)\r\n#\r\n# Allow it only for testing in a
    development environment!\r\n# In production it adds a possible security vulnerability,
    so for security reasons\r\n# it is not allowed using it together with empty cli-password.\r\n#\r\n#allow-loopback-peers\r\n\r\n#
    Flag that can be used to disallow peers on well-known broadcast addresses (224.0.0.0
    and above, and FFXX:*).\r\n# This is an extra security measure.\r\n#\r\n#no-multicast-peers\r\n\r\n#  
    Option to set the max time, in seconds, allowed for full allocation establishment.\r\n#
    Default is 60 seconds.\r\n#\r\n#max-allocate-timeout=60\r\n\r\n# Option to allow
    or ban specific ip addresses or ranges of ip addresses.\r\n# If an ip address
    is specified as both allowed and denied, then the ip address is\r\n# considered
    to be allowed. This is useful when you wish to ban a range of ip\r\n# addresses,
    except for a few specific ips within that range.\r\n#\r\n# This can be used when
    you do not want users of the turn server to be able to access\r\n# machines reachable
    by the turn server, but would otherwise be unreachable from the\r\n# internet
    (e.g. when the turn server is sitting behind a NAT)\r\n#\r\n# Examples:\r\n# denied-peer-ip=83.166.64.0-83.166.95.255\r\n#
    allowed-peer-ip=83.166.68.45\r\n\r\n# File name to store the pid of the process.\r\n#
    Default is /var/run/turnserver.pid (if superuser account is used) or\r\n# /var/tmp/turnserver.pid     
    .\r\n#\r\n#pidfile=\"/var/run/turnserver.pid\"\r\n\r\n# Require authentication
    of the STUN Binding request.\r\n# By default, the clients are allowed anonymous
    access to the STUN Binding functionality.\r\n#\r\n#secure-stun\r\n\r\n# Mobility
    with ICE (MICE) specs support.\r\n#\r\n#mobility\r\n\r\n# Allocate Address Family
    according (DEPRECATED and will be removed in favor of allocation-default-address-family)\r\n#
    If enabled then TURN server allocates address family according  the TURN\r\n#
    Client <=> Server communication address family.\r\n# (By default Coturn works
    according RFC 6156.)\r\n# !!Warning: Enabling this option breaks RFC6156 section-4.2
    (violates use default IPv4)!!\r\n#\r\n#keep-address-family\r\n\r\n# TURN server
    allocates address family according TURN client requested address family.\r\n#
    If address family not requested explicitly by the client, then it falls back to
    this default.\r\n# The standard RFC explicitly define that this default must be
    IPv4, \r\n# so use other option values with care! \r\n# Possible values: \"ipv4\"
    or \"ipv6\" or \"keep\" \r\n# \"keep\" sets the allocation default address family
    according to \r\n# the TURN client allocation request connection address family.\r\n#\r\n#allocation-default-address-family=\"ipv4\"\r\n#allocation-default-address-family=\"ipv4\"\r\n\r\n#
    User name to run the process. After the initialization, the turnserver process\r\n#
    will attempt to change the current user ID to that user.\r\n#\r\n#proc-user=<user-name>\r\n\r\n#      
    Group name to run the process. After the initialization, the turnserver process\r\n#
    will attempt to change the current group ID to that group.\r\n#\r\n#proc-group=<group-name>\r\n\r\n#  
    Turn OFF the CLI support.\r\n# By default it is always ON.\r\n# See also options
    cli-ip and cli-port.\r\n#\r\n#no-cli\r\n\r\n#Local system IP address to be used
    for CLI server endpoint. Default value\r\n# is 127.0.0.1.\r\n#\r\ncli-ip=127.0.0.1\r\n\r\n#
    CLI server port. Default is 5766.\r\n#\r\ncli-port=5766\r\n\r\n# CLI access password.
    Default is empty (no password).\r\n# For the security reasons, it is recommended
    that you use the encrypted\r\n# form of the password (see the -P command in the
    turnadmin utility).\r\n#\r\n# Secure form for password 'qwerty':\r\n#\r\n#cli-password=$5$79a316b350311570$81df9cfb9af7f5e5a76eada31e7097b663a0670f99a3c07ded3f1c8e59c5658a\r\n#\r\n#
    Or unsecure form for the same password:\r\n#\r\ncli-password=fake_password\r\n\r\n#
    Enable Web-admin support on https. By default it is Disabled.\r\n# If it is enabled
    it also enables a http a simple static banner page\r\n# with a small reminder
    that the admin page is available only on https.\r\n# Not supported if no-tls option
    used\r\n#\r\n#web-admin\r\n\r\n# Local system IP address to be used for Web-admin
    server endpoint. Default value is 127.0.0.1.\r\n#\r\n#web-admin-ip=127.0.0.1\r\n\r\n#
    Web-admin server port. Default is 8080.\r\n#\r\n#web-admin-port=8080\r\n\r\n#
    Web-admin server listen on STUN/TURN worker threads\r\n# By default it is disabled
    for security reasons! (Not recommended in any production environment!)\r\n#\r\n#web-admin-listen-on-workers\r\n\r\n#
    Redirect ACME, i.e. HTTP GET requests matching '^/.well-known/acme-challenge/(.*)'
    to '<URL>$1'.\r\n# Default is '', i.e. no special handling for such requests.\r\n#\r\n#acme-redirect=http://redirectserver/.well-known/acme-challenge/\r\n\r\n#
    Server relay. NON-STANDARD AND DANGEROUS OPTION.\r\n# Only for those applications
    when you want to run\r\n# server applications on the relay endpoints.\r\n# This
    option eliminates the IP permissions check on\r\n# the packets incoming to the
    relay endpoints.\r\n#\r\n#server-relay\r\n\r\n# Maximum number of output sessions
    in ps CLI command.\r\n# This value can be changed on-the-fly in CLI. The default
    value is 256.\r\n#\r\n#cli-max-output-sessions\r\n\r\n# Set network engine type
    for the process (for internal purposes).\r\n#\r\n#ne=[1|2|3]\r\n\r\n# Do not allow
    an TLS/DTLS version of protocol\r\n#\r\n#no-tlsv1\r\n#no-tlsv1_1\r\n#no-tlsv1_2\r\n\r\n#
    Disable RFC5780 (NAT behavior discovery).\r\n#\r\n# Originally, if there are more
    than one listener address from the same\r\n# address family, then by default the
    NAT behavior discovery feature enabled.\r\n# This option disables the original
    behavior, because the NAT behavior\r\n# discovery adds extra attributes to response,
    and this increase the\r\n# possibility of an amplification attack.\r\n#\r\n# Strongly
    encouraged to use this option to decrease gain factor in STUN\r\n# binding responses.\r\n#\r\nno-rfc5780\r\n\r\n#
    Disable handling old STUN Binding requests and disable MAPPED-ADDRESS\r\n# attribute
    in binding response (use only the XOR-MAPPED-ADDRESS).\r\n#\r\n# Strongly encouraged
    to use this option to decrease gain factor in STUN\r\n# binding responses.\r\n#\r\nno-stun-backward-compatibility\r\n\r\n#
    Only send RESPONSE-ORIGIN attribute in binding response if RFC5780 is enabled.\r\n#\r\n#
    Strongly encouraged to use this option to decrease gain factor in STUN\r\n# binding
    responses.\r\n#\r\nresponse-origin-only-with-rfc5780"
kind: ConfigMap
metadata:
  name: coturn-config